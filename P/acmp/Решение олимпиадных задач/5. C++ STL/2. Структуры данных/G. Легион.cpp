/*
* ------------ ЛЕГИОН ------------
& структуры данных
~ рекурсия ~ рекурсия_с_мемоизацией ~ рекуррентные_соотношения
? задача на рекуррентные соотношения. Дано число n человек, требуется определить, сколько групп по 3 человека можно из них сформировать
? Построим соотношение по правилу, указанному в задаче:

? 2 = НЕЛЬЗЯ СОЗДАТЬ ГРУППУ
? 3 = ГРУППА
? 4 = 2 человека + 2 человека
? 5 = 2 + 3 // т.е. одна группа
? 6 = 3 + 3 // т.е. две гурппы
? 7 = 3 + 4 // т.е. опять одна группа

? Будем искать ответ рекурсивно, запоминая в отображение уже найденные решения для подзадач, чтобы не делать лишние вычисления.
*/

#include <iostream>
#include <vector>
#include <map>
#include <algorithm>

#define all(s) s.begin(), s.end()

using namespace std;

using T = long long;

map <T, T> mem;

T rec(T n) {
    if (n < 3)
        return 0;

    if (mem.count(n))
        return mem[n];

    T p = n / 2;
    return mem[n] = (rec(p) + rec(p + n % 2));
}

int main() {
    // ...
    ios::sync_with_stdio(false);
    T n;
    cin >> n;

    mem[3] = 1;

    cout << rec(n);

    return 0;
}
