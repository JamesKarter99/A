/*
* ------------ Сортировка пузырьком ------------
^ O(n^2)
$ сортировка_пузырьком
? Особенность данного алгоритма заключается в следующем: после первого завершения внутреннего цикла максимальный элемент массива всегда находится на N-ой позиции. При втором проходе, следующий по значению максимальный элемент находится на N-1 месте. И так далее. Таким образом, на каждом следующем проходе число обрабатываемых элементов уменьшается на 1 и нет необходимости «обходить» весь массив от начала до конца каждый раз.

? Введение индикатора (флажка f) действительно произошедших во внутреннем цикле обменов уменьшает число лишних проходов в случаях с частично отсортированными массивами на входе. Перед каждым проходом по внутреннему циклу флажок сбрасывается в 0, а после действительно произошедшего обмена устанавливается в 1. Если после выхода из внутреннего цикла флажок равен 0, то обменов не было, то есть массив отсортирован и можно досрочно выйти из программы сортировки.
*/

vector <int> d(n);

// buble sort
for (int i(0); i < n - 1; i++) {
    bool f = false; // индикатор обменов во внутреннем цикле
    
    for (int j(0); j < n - i - 1; j++) {
        if (d[j] > d[j + 1]) {
            swap(d[j], d[j + 1]);
            f = true;
        }
    }
    if (!f) break;
}