/*
* ------------ АЛГОРИТМ ЛИ ------------
^ O(n + m)
$ ли
# планарный_граф
? Алгоритм волновой трассировки, основанный на методах поиска в ширину. Находит кратчайший путь на планарном графе. Включает три этапа: инициализацию, распространение волны и восстановление пути.

? Во время иницализации строится образ обрабатываемого поля, каждой вершине присваиваются атрибуты проходимости/непроходимости, запоминается стартовая и финишная вершины.

? Распространение волны реализуется с помощью очереди (стартовая вершина помещается в очередь перед выполнением главного цикла). Из каждой вершины, крайней в очереди, порождается шаг в соседние вершины, изменяются их атрибуты расстояния (равны кол-ву шагов от стартовой вершины до данной) и эти вершины добавляются в конец очереди. Крайняя вершина удаляется из очереди. Выполняется до тех пор, пока не встретится конечная вершина (будет найден кратчайший путь) или очередь не станет пуста (путь не существует).

? Восстановление пути проходит в обратном направлении: при выборе средующей ячейки выбирается та, чей атрибут расстояния от стартовой на единицу меньше текущей.
*/

// todo: код вставлю, когда буду делать Lines